const u=e=>e.replace(/\+\-/g,"-").replace(/\-\+/g,"-").replace(/--/g,"+").replace(/\+\+/g,"+").replace(/\(\+/g,"(").replace(/(\d+)%/g,"($1/100)").replace(/\)\(/g,")*(").replace(/(\d)(\()/g,"$1*(").replace(/(\))(\d)/g,")*$2"),l=e=>{const t=u(e),o=['"',";","`","<",">"];return/[a-zA-Z]/.test(t)||o.some(n=>t.includes(n))?{ok:!1,error:new Error("invalid format")}:{ok:!0,data:t}},c=e=>{const t=l(e);return t.ok?{ok:!0,data:t.data}:t};class a{#t;constructor(t){this.#t=structuredClone(t)}get(){return structuredClone(this.#t)}}class h{#t;#e;constructor(){this.#t=[],this.#e=-1}add(t){this.#e<this.#t.length-1&&(this.#t=this.#t.slice(0,this.#e+1)),this.#t.push(t),this.#e++}undo(){return this.#e>0?(this.#e--,this.#t[this.#e]):null}redo(){return this.#e<this.#t.length-1?(this.#e++,this.#t[this.#e]):null}currentMemento(){return this.#e===-1?null:this.#t[this.#e].get()}getForIndex(t){return t>=0&&t<=this.#t.length-1?this.#t[t]:null}getHistory(){return this.#t.map(t=>new a(t.get()))}}function p(e){try{const t=new Function(`return ${e}`)();if(isNaN(t))throw new Error("Is not a number");return{ok:!0,data:t}}catch(t){return{ok:!1,error:t}}}const i=new h,r={get operation(){return document.querySelector(".display__operation")},get result(){return document.querySelector(".display__result")},setOperation(e){r.operation.value=e},setResult(e){r.result.value=e},clear(){this.setOperation(""),this.setResult("")},get hasOperation(){return!!this.operation.value.trim()},get hasResult(){return!!this.result.value.trim()}};class d{#t;constructor(){this.#t=""}get(){return this.#t}set(t){this.#t=t}del(){this.set(this.get().slice(0,-1)),r.setOperation(this.get()),r.operation.scrollLeft=r.operation.scrollWidth}push(t){this.set(this.get()+t),r.setOperation(this.get()),r.operation.scrollLeft=r.operation.scrollWidth}clear(){this.set(""),r.clear()}eval(){const t=i.currentMemento(),o=this.get()===t?.operation;if(!r.hasOperation){r.clear();return}if(o){r.hasResult||r.setResult(t?.result);return}try{const s=c(this.get());if(!s.ok)throw s.error;const n=p(s.data);if(!n.ok)throw n.error;i.add(new a({operation:this.get(),result:n.data})),r.setResult(n.data),r.result.scrollLeft=0}catch(s){console.error("Message:",s.message),console.error("Stack:",s.stack),r.setResult("Math error")}}}const g=new d;export{i as H,g as u};
